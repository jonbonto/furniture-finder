{"version":3,"sources":["components/ProductItem.js","components/ProductList.js","components/Search.js","context/filtered-context.js","components/Filter.js","components/FilteredList.js","helpers.js","App.js","serviceWorker.js","index.js"],"names":["Paragraph","Typography","Text","colorConfigs","Classic","Midcentury","Scandinavian","Modern","Contemporary","ProductItem","product","furnitureStyles","furniture_style","map","style","color","key","title","className","name","price","headStyle","border","bodyStyle","paddingTop","minHeight","description","delivery_time","ProductList","productsList","products","sm","md","gutter","Search","placeholder","onChange","e","console","log","target","value","FilterContext","React","createContext","FilterProvider","children","useState","stylesSelected","setStyles","deliveredTimeSelected","setDeliveredTime","Provider","useFilter","context","useContext","undefined","Error","Option","Select","optionsStyle","deliveredTimesConfig","id","start","end","label","Number","MAX_SAFE_INTEGER","deliveredTimeOptions","dt","Filter","mode","width","find","dtc","FilteredList","setProducts","useEffect","a","fetch","res","json","resJson","getProducts","filteredProducts","_","isEmpty","filter","filteredStyles","styles","intersection","filteredDelivery","time","fd","inRange","filterByDelivery","parseInt","Header","Layout","Content","App","position","zIndex","background","height","padding","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20991789.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Tag, Typography } from \"antd\";\r\n\r\nconst { Paragraph, Text } = Typography;\r\n\r\nconst colorConfigs = {\r\n  Classic: \"gold\",\r\n  Midcentury: \"volcano\",\r\n  Scandinavian: \"magenta\",\r\n  Modern: \"cyan\",\r\n  Contemporary: \"geekblue\"\r\n};\r\n\r\nexport default function ProductItem({ product }) {\r\n  const furnitureStyles = product.furniture_style.map(style => (\r\n    <Tag color={colorConfigs[style]} key={style}>{style}</Tag>\r\n  ));\r\n\r\n  const title = (\r\n    <div className=\"product-title\">\r\n      <h3>{product.name}</h3>\r\n      <span>{product.price}</span>\r\n    </div>\r\n  );\r\n  return (\r\n    <Card\r\n      title={title}\r\n      headStyle={{ border: \"none\" }}\r\n      bodyStyle={{ paddingTop: 0, minHeight: 202 }}\r\n    >\r\n      <Paragraph>{product.description}</Paragraph>\r\n      <div className=\"product-styles\">\r\n        {furnitureStyles}\r\n      </div>\r\n      <div className=\"product-delivery-time\">\r\n        <Text>{product.delivery_time} days</Text>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Col, Row } from 'antd'\r\n\r\nimport ProductItem from './ProductItem'\r\n\r\nexport default function ProductList({products}) {\r\n  const productsList = products.map(product => (\r\n    <Col key={product.name} sm={24} md={12}>\r\n      <ProductItem product={product} />\r\n    </Col>\r\n  ))\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      {productsList}    \r\n    </Row>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nexport default function Search() {\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"search: \" + e.target.value)\r\n  }\r\n  return (\r\n    <Input placeholder=\"Search Furniture\" onChange={handleChange}/>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst FilterContext = React.createContext()\r\n\r\nfunction FilterProvider({children}) {\r\n  const [stylesSelected, setStyles] = React.useState([])\r\n  const [deliveredTimeSelected, setDeliveredTime] = React.useState([])\r\n\r\n  const value = {\r\n    stylesSelected,\r\n    deliveredTimeSelected,\r\n    setStyles,\r\n    setDeliveredTime\r\n  }\r\n  return (\r\n    <FilterContext.Provider value={value}>\r\n        {children}\r\n    </FilterContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useFilter() {\r\n  const context = React.useContext(FilterContext)\r\n  if (context === undefined) {\r\n    throw new Error(`useFilter must be used within a FilterProvider`)\r\n  }\r\n  return context\r\n}\r\n\r\nexport {\r\n  FilterProvider,\r\n  useFilter\r\n}\r\n","import React from \"react\";\r\nimport { Select, Row, Col, Tag } from \"antd\";\r\nimport { useFilter } from \"../context/filtered-context\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst optionsStyle = [\r\n  \"Classic\",\r\n  \"Midcentury\",\r\n  \"Scandinavian\",\r\n  \"Modern\",\r\n  \"Contemporary\"\r\n].map(style => (\r\n  <Option key={style} value={style}>\r\n    {style}\r\n  </Option>\r\n));\r\n\r\nconst deliveredTimesConfig = [\r\n  { id: 1, start: 1, end: 8, label: \"1 week\" },\r\n  { id: 2, start: 8, end: 15, label: \"2 week\" },\r\n  { id: 3, start: 15, end: 30, label: \"1 month\" },\r\n  { id: 4, start: 31, end: Number.MAX_SAFE_INTEGER, label: \"& more\" }\r\n];\r\n\r\nconst deliveredTimeOptions = deliveredTimesConfig.map(dt => (\r\n  <Option key={dt.id} value={dt.id}>\r\n    {dt.label}\r\n  </Option>\r\n));\r\n\r\nexport default function Filter() {\r\n  const { setStyles, setDeliveredTime } = useFilter();\r\n  function handleChangeStyle(value) {\r\n    setStyles(value);\r\n  }\r\n\r\n  function handleChangeTime(value) {\r\n    setDeliveredTime(value.map(id => deliveredTimesConfig.find(dtc => dtc.id === id)))\r\n  }\r\n\r\n  return (\r\n    <Row gutter={16}>\r\n      <Col sm={24} md={12}>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Furniture Style\"\r\n          onChange={handleChangeStyle}\r\n        >\r\n          {optionsStyle}\r\n        </Select>\r\n      </Col>\r\n      <Col sm={24} md={12}>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Delivery Time\"\r\n          onChange={handleChangeTime}\r\n        >\r\n          {deliveredTimeOptions}\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport ProductList from \"./ProductList\";\r\nimport { filterByStyle, filterByDelivery } from \"../helpers\";\r\nimport { useFilter } from \"../context/filtered-context\";\r\n\r\nexport default function FilteredList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const { stylesSelected, deliveredTimeSelected } = useFilter() \r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          \"http://www.mocky.io/v2/5c9105cb330000112b649af8\"\r\n        );\r\n        const resJson = await res.json();\r\n        const products = resJson.products;\r\n        setProducts(products);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, []);\r\n\r\n  let filteredProducts = products;\r\n\r\n  if (!_.isEmpty(stylesSelected)) {\r\n    filteredProducts = filteredProducts.filter(product =>\r\n      filterByStyle(stylesSelected, product.furniture_style)\r\n    );\r\n  }\r\n\r\n  if (!_.isEmpty(deliveredTimeSelected)) {\r\n    filteredProducts = filteredProducts.filter(product =>\r\n      filterByDelivery(deliveredTimeSelected, parseInt(product.delivery_time))\r\n    );\r\n  }\r\n\r\n  return <ProductList products={filteredProducts} />;\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport const filterByStyle = (filteredStyles, styles) => !_.isEmpty(_.intersection(filteredStyles, styles))\r\n\r\nexport const filterByDelivery = (filteredDelivery, time) => {\r\n  for (const fd of filteredDelivery){\r\n    if(_.inRange(time, fd.start, fd.end))\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\n\nimport \"./App.css\";\nimport ProductList from \"./components/ProductList\";\nimport Search from \"./components/Search\";\nimport Filter from \"./components/Filter\";\nimport FilteredList from \"./components/FilteredList\";\nimport { FilterProvider } from \"./context/filtered-context\";\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n  return (\n    <FilterProvider>\n      <Layout>\n        <Header\n          style={{\n            position: \"fixed\",\n            zIndex: 1,\n            width: \"100%\",\n            background: \"#106CC8\",\n            height: \"unset\"\n          }}\n        >\n          <div style={{ width: \"50%\" }}>\n            <Search />\n          </div>\n          <Filter />\n        </Header>\n        <Content style={{ padding: \"150px 50px 50px 50px\", minHeight: \"100vh\" }}>\n          <FilteredList />\n        </Content>\n      </Layout>\n    </FilterProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}